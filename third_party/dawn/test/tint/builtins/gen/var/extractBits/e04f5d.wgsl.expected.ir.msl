#include <metal_stdlib>
using namespace metal;
struct tint_module_vars_struct {
  device int3* prevent_dce;
};
struct vertex_main_outputs {
  float4 tint_symbol [[position]];
};

void extractBits_e04f5d(tint_module_vars_struct tint_module_vars) {
  int3 arg_0 = int3(1);
  uint arg_1 = 1u;
  uint arg_2 = 1u;
  int3 const v = arg_0;
  uint const v_1 = arg_2;
  uint const v_2 = min(arg_1, 32u);
  int3 res = extract_bits(v, v_2, min(v_1, (32u - v_2)));
  (*tint_module_vars.prevent_dce) = res;
}
float4 vertex_main_inner(tint_module_vars_struct tint_module_vars) {
  extractBits_e04f5d(tint_module_vars);
  return float4(0.0f);
}
fragment void fragment_main(device int3* prevent_dce [[buffer(0)]]) {
  tint_module_vars_struct const tint_module_vars = tint_module_vars_struct{.prevent_dce=prevent_dce};
  extractBits_e04f5d(tint_module_vars);
}
kernel void compute_main(device int3* prevent_dce [[buffer(0)]]) {
  tint_module_vars_struct const tint_module_vars = tint_module_vars_struct{.prevent_dce=prevent_dce};
  extractBits_e04f5d(tint_module_vars);
}
vertex vertex_main_outputs vertex_main(device int3* prevent_dce [[buffer(0)]]) {
  tint_module_vars_struct const tint_module_vars = tint_module_vars_struct{.prevent_dce=prevent_dce};
  return vertex_main_outputs{.tint_symbol=vertex_main_inner(tint_module_vars)};
}
